CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    role ENUM('professor','student','secretary') NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    phone VARCHAR(20),
    address VARCHAR(255),
    am VARCHAR(20), -- only for students
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE topics (
    topic_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    pdf_path VARCHAR(255),
    created_by INT NOT NULL,
    status ENUM('available','assigned','archived') DEFAULT 'available',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES users(user_id)
);

CREATE TABLE theses (
    thesis_id INT AUTO_INCREMENT PRIMARY KEY,
    topic_id INT NOT NULL,
    student_id INT NOT NULL,
    supervisor_id INT NOT NULL,
    status ENUM('under_assignment','active','under_examination','completed','cancelled') DEFAULT 'under_assignment',
    assigned_date DATE,
    completed_date DATE,
    library_link VARCHAR(255),
    FOREIGN KEY (topic_id) REFERENCES topics(topic_id),
    FOREIGN KEY (student_id) REFERENCES users(user_id),
    FOREIGN KEY (supervisor_id) REFERENCES users(user_id)
);

CREATE TABLE committee_members (
    committee_member_id INT AUTO_INCREMENT PRIMARY KEY,
    thesis_id INT NOT NULL,
    professor_id INT NOT NULL,
    invitation_status ENUM('pending','accepted','rejected') DEFAULT 'pending',
    invitation_date DATE,
    response_date DATE,
    FOREIGN KEY (thesis_id) REFERENCES theses(thesis_id),
    FOREIGN KEY (professor_id) REFERENCES users(user_id)
);

CREATE TABLE notes (
    note_id INT AUTO_INCREMENT PRIMARY KEY,
    thesis_id INT NOT NULL,
    author_id INT NOT NULL,
    content VARCHAR(300) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (thesis_id) REFERENCES theses(thesis_id),
    FOREIGN KEY (author_id) REFERENCES users(user_id)
);

CREATE TABLE files (
    file_id INT AUTO_INCREMENT PRIMARY KEY,
    thesis_id INT NOT NULL,
    uploaded_by INT NOT NULL,
    file_path VARCHAR(255) NOT NULL,
    file_type ENUM('draft','final','supporting'),
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (thesis_id) REFERENCES theses(thesis_id),
    FOREIGN KEY (uploaded_by) REFERENCES users(user_id)
);

CREATE TABLE presentations (
    presentation_id INT AUTO_INCREMENT PRIMARY KEY,
    thesis_id INT NOT NULL,
    date DATE NOT NULL,
    time TIME NOT NULL,
    location VARCHAR(255),
    mode ENUM('in_person','online'),
    FOREIGN KEY (thesis_id) REFERENCES theses(thesis_id)
);

CREATE TABLE grades (
    grade_id INT AUTO_INCREMENT PRIMARY KEY,
    thesis_id INT NOT NULL,
    professor_id INT NOT NULL,
    criteria_scores JSON,
    final_grade DECIMAL(4,2) NOT NULL,
    graded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (thesis_id) REFERENCES theses(thesis_id),
    FOREIGN KEY (professor_id) REFERENCES users(user_id)
);
